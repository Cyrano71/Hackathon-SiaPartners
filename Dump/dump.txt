    /*
    function addOpData(OpData calldata op) public {
        OpData[] storage data = ops[msg.sender];
        data.push(op);
    }
    */


    /*
    struct Tokens { 
            address token;
            address wallet;
            bytes callData;
            bytes32 accountGasLimits;
            bytes32 gasFees;
            bytes signature;
    }

    */

       /*
        uint256 length = tokens.length;
        Allowance[] memory allowances = new Allowance[](length);
        for (uint256 i = 0; i < length; i++) 
        {   
            uint256 balance = IERC20(tokens[i]).balanceOf(from);
            allowances[i] = Allowance(tokens[i], balance);
        }
        return allowances;
        */

//transferFunds 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc40000000000000000000000000000000000000000000000000000000000000001

// 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, ["0x0000000000000000000000005b38da6a701c568545dcfcb03fcb875f56beddc40000000000000000000000000000000000000000000000000000000000000001"]



    struct TransferCoin {
        address heir;
        uint256 amount;
    }

    function encode() external view returns (bytes memory result) {
        TransferCoin[] memory transfers = new TransferCoin[](1);
        transfers[0] = TransferCoin(msg.sender, 1);
        return abi.encode(transfers);
    }

    function encode2() external view returns (bytes memory result) {
        return abi.encode(TransferCoin(msg.sender, 1));
    }

//addNotary 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
//addToken smartContract(0xEf9f1ACE83dfbB8f559Da621f4aEA72C6EB10eBf) , 1
//balanceOf 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
//transferFunds 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, [[0x5B38Da6a701c568545dCfcB03FcB875f56beddC4, 1]]


0x373070dF73eC02d808eEa331400CaF05e0Cb81b7


    struct Token {
        address erc20;
        uint256 amount;
    }
